Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Program
Rule 1     Program -> Declarations Statements
Rule 2     Declarations -> Declarations Declaration
Rule 3     Declarations -> <empty>
Rule 4     Declarations -> Type IdList
Rule 5     Type -> INT
Rule 6     Type -> STR
Rule 7     IdList -> IdList , id
Rule 8     IdList -> id
Rule 9     Statements -> Statements Statement
Rule 10    Statements -> Statement
Rule 11    Statements -> Atrib
Rule 12    Statement -> PRINT ( PrintArgs )
Rule 13    PrintArgs -> PrintArgs , PrintArg
Rule 14    PrintArgs -> PrintArg
Rule 15    PrintArgs -> Exp
Rule 16    Atrib -> id = Exp
Rule 17    Declaration -> Type IdList
Rule 18    Declaration -> <empty>
Rule 19    PrintArg -> id
Rule 20    PrintArg -> str
Rule 21    PrintArg -> Exp
Rule 22    Exp -> INT ( Exp )
Rule 23    Exp -> INPUT ( str )

Terminals, with rules where they appear

(                    : 12 22 23
)                    : 12 22 23
,                    : 7 13
=                    : 16
INPUT                : 23
INT                  : 5 22
PRINT                : 12
STR                  : 6
error                : 
id                   : 7 8 16 19
str                  : 20 23

Nonterminals, with rules where they appear

Atrib                : 11
Declaration          : 2
Declarations         : 1 2
Exp                  : 15 16 21 22
IdList               : 4 7 17
PrintArg             : 13 14
PrintArgs            : 12 13
Program              : 0
Statement            : 9 10
Statements           : 1 9
Type                 : 4 17

Parsing method: LALR

state 0

    (0) S' -> . Program
    (1) Program -> . Declarations Statements
    (2) Declarations -> . Declarations Declaration
    (3) Declarations -> .
    (4) Declarations -> . Type IdList
    (5) Type -> . INT
    (6) Type -> . STR

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
    PRINT           reduce using rule 3 (Declarations -> .)
    id              reduce using rule 3 (Declarations -> .)
    INT             shift and go to state 4
    STR             shift and go to state 5

  ! INT             [ reduce using rule 3 (Declarations -> .) ]
  ! STR             [ reduce using rule 3 (Declarations -> .) ]

    Program                        shift and go to state 1
    Declarations                   shift and go to state 2
    Type                           shift and go to state 3

state 1

    (0) S' -> Program .



state 2

    (1) Program -> Declarations . Statements
    (2) Declarations -> Declarations . Declaration
    (9) Statements -> . Statements Statement
    (10) Statements -> . Statement
    (11) Statements -> . Atrib
    (17) Declaration -> . Type IdList
    (18) Declaration -> .
    (12) Statement -> . PRINT ( PrintArgs )
    (16) Atrib -> . id = Exp
    (5) Type -> . INT
    (6) Type -> . STR

  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for id resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for STR resolved as shift
    PRINT           shift and go to state 11
    id              shift and go to state 12
    INT             shift and go to state 4
    STR             shift and go to state 5

  ! PRINT           [ reduce using rule 18 (Declaration -> .) ]
  ! id              [ reduce using rule 18 (Declaration -> .) ]
  ! INT             [ reduce using rule 18 (Declaration -> .) ]
  ! STR             [ reduce using rule 18 (Declaration -> .) ]

    Statements                     shift and go to state 6
    Declaration                    shift and go to state 7
    Statement                      shift and go to state 8
    Atrib                          shift and go to state 9
    Type                           shift and go to state 10

state 3

    (4) Declarations -> Type . IdList
    (7) IdList -> . IdList , id
    (8) IdList -> . id

    id              shift and go to state 14

    IdList                         shift and go to state 13

state 4

    (5) Type -> INT .

    id              reduce using rule 5 (Type -> INT .)


state 5

    (6) Type -> STR .

    id              reduce using rule 6 (Type -> STR .)


state 6

    (1) Program -> Declarations Statements .
    (9) Statements -> Statements . Statement
    (12) Statement -> . PRINT ( PrintArgs )

    $end            reduce using rule 1 (Program -> Declarations Statements .)
    PRINT           shift and go to state 11

    Statement                      shift and go to state 15

state 7

    (2) Declarations -> Declarations Declaration .

    PRINT           reduce using rule 2 (Declarations -> Declarations Declaration .)
    id              reduce using rule 2 (Declarations -> Declarations Declaration .)
    INT             reduce using rule 2 (Declarations -> Declarations Declaration .)
    STR             reduce using rule 2 (Declarations -> Declarations Declaration .)


state 8

    (10) Statements -> Statement .

    PRINT           reduce using rule 10 (Statements -> Statement .)
    $end            reduce using rule 10 (Statements -> Statement .)


state 9

    (11) Statements -> Atrib .

    PRINT           reduce using rule 11 (Statements -> Atrib .)
    $end            reduce using rule 11 (Statements -> Atrib .)


state 10

    (17) Declaration -> Type . IdList
    (7) IdList -> . IdList , id
    (8) IdList -> . id

    id              shift and go to state 14

    IdList                         shift and go to state 16

state 11

    (12) Statement -> PRINT . ( PrintArgs )

    (               shift and go to state 17


state 12

    (16) Atrib -> id . = Exp

    =               shift and go to state 18


state 13

    (4) Declarations -> Type IdList .
    (7) IdList -> IdList . , id

    PRINT           reduce using rule 4 (Declarations -> Type IdList .)
    id              reduce using rule 4 (Declarations -> Type IdList .)
    INT             reduce using rule 4 (Declarations -> Type IdList .)
    STR             reduce using rule 4 (Declarations -> Type IdList .)
    ,               shift and go to state 19


state 14

    (8) IdList -> id .

    ,               reduce using rule 8 (IdList -> id .)
    PRINT           reduce using rule 8 (IdList -> id .)
    id              reduce using rule 8 (IdList -> id .)
    INT             reduce using rule 8 (IdList -> id .)
    STR             reduce using rule 8 (IdList -> id .)


state 15

    (9) Statements -> Statements Statement .

    PRINT           reduce using rule 9 (Statements -> Statements Statement .)
    $end            reduce using rule 9 (Statements -> Statements Statement .)


state 16

    (17) Declaration -> Type IdList .
    (7) IdList -> IdList . , id

    PRINT           reduce using rule 17 (Declaration -> Type IdList .)
    id              reduce using rule 17 (Declaration -> Type IdList .)
    INT             reduce using rule 17 (Declaration -> Type IdList .)
    STR             reduce using rule 17 (Declaration -> Type IdList .)
    ,               shift and go to state 19


state 17

    (12) Statement -> PRINT ( . PrintArgs )
    (13) PrintArgs -> . PrintArgs , PrintArg
    (14) PrintArgs -> . PrintArg
    (15) PrintArgs -> . Exp
    (19) PrintArg -> . id
    (20) PrintArg -> . str
    (21) PrintArg -> . Exp
    (22) Exp -> . INT ( Exp )
    (23) Exp -> . INPUT ( str )

    id              shift and go to state 23
    str             shift and go to state 24
    INT             shift and go to state 25
    INPUT           shift and go to state 26

    PrintArgs                      shift and go to state 20
    PrintArg                       shift and go to state 21
    Exp                            shift and go to state 22

state 18

    (16) Atrib -> id = . Exp
    (22) Exp -> . INT ( Exp )
    (23) Exp -> . INPUT ( str )

    INT             shift and go to state 25
    INPUT           shift and go to state 26

    Exp                            shift and go to state 27

state 19

    (7) IdList -> IdList , . id

    id              shift and go to state 28


state 20

    (12) Statement -> PRINT ( PrintArgs . )
    (13) PrintArgs -> PrintArgs . , PrintArg

    )               shift and go to state 29
    ,               shift and go to state 30


state 21

    (14) PrintArgs -> PrintArg .

    )               reduce using rule 14 (PrintArgs -> PrintArg .)
    ,               reduce using rule 14 (PrintArgs -> PrintArg .)


state 22

    (15) PrintArgs -> Exp .
    (21) PrintArg -> Exp .

  ! reduce/reduce conflict for ) resolved using rule 15 (PrintArgs -> Exp .)
  ! reduce/reduce conflict for , resolved using rule 15 (PrintArgs -> Exp .)
    )               reduce using rule 15 (PrintArgs -> Exp .)
    ,               reduce using rule 15 (PrintArgs -> Exp .)

  ! )               [ reduce using rule 21 (PrintArg -> Exp .) ]
  ! ,               [ reduce using rule 21 (PrintArg -> Exp .) ]


state 23

    (19) PrintArg -> id .

    )               reduce using rule 19 (PrintArg -> id .)
    ,               reduce using rule 19 (PrintArg -> id .)


state 24

    (20) PrintArg -> str .

    )               reduce using rule 20 (PrintArg -> str .)
    ,               reduce using rule 20 (PrintArg -> str .)


state 25

    (22) Exp -> INT . ( Exp )

    (               shift and go to state 31


state 26

    (23) Exp -> INPUT . ( str )

    (               shift and go to state 32


state 27

    (16) Atrib -> id = Exp .

    PRINT           reduce using rule 16 (Atrib -> id = Exp .)
    $end            reduce using rule 16 (Atrib -> id = Exp .)


state 28

    (7) IdList -> IdList , id .

    ,               reduce using rule 7 (IdList -> IdList , id .)
    PRINT           reduce using rule 7 (IdList -> IdList , id .)
    id              reduce using rule 7 (IdList -> IdList , id .)
    INT             reduce using rule 7 (IdList -> IdList , id .)
    STR             reduce using rule 7 (IdList -> IdList , id .)


state 29

    (12) Statement -> PRINT ( PrintArgs ) .

    PRINT           reduce using rule 12 (Statement -> PRINT ( PrintArgs ) .)
    $end            reduce using rule 12 (Statement -> PRINT ( PrintArgs ) .)


state 30

    (13) PrintArgs -> PrintArgs , . PrintArg
    (19) PrintArg -> . id
    (20) PrintArg -> . str
    (21) PrintArg -> . Exp
    (22) Exp -> . INT ( Exp )
    (23) Exp -> . INPUT ( str )

    id              shift and go to state 23
    str             shift and go to state 24
    INT             shift and go to state 25
    INPUT           shift and go to state 26

    PrintArg                       shift and go to state 33
    Exp                            shift and go to state 34

state 31

    (22) Exp -> INT ( . Exp )
    (22) Exp -> . INT ( Exp )
    (23) Exp -> . INPUT ( str )

    INT             shift and go to state 25
    INPUT           shift and go to state 26

    Exp                            shift and go to state 35

state 32

    (23) Exp -> INPUT ( . str )

    str             shift and go to state 36


state 33

    (13) PrintArgs -> PrintArgs , PrintArg .

    )               reduce using rule 13 (PrintArgs -> PrintArgs , PrintArg .)
    ,               reduce using rule 13 (PrintArgs -> PrintArgs , PrintArg .)


state 34

    (21) PrintArg -> Exp .

    )               reduce using rule 21 (PrintArg -> Exp .)
    ,               reduce using rule 21 (PrintArg -> Exp .)


state 35

    (22) Exp -> INT ( Exp . )

    )               shift and go to state 37


state 36

    (23) Exp -> INPUT ( str . )

    )               shift and go to state 38


state 37

    (22) Exp -> INT ( Exp ) .

    )               reduce using rule 22 (Exp -> INT ( Exp ) .)
    ,               reduce using rule 22 (Exp -> INT ( Exp ) .)
    PRINT           reduce using rule 22 (Exp -> INT ( Exp ) .)
    $end            reduce using rule 22 (Exp -> INT ( Exp ) .)


state 38

    (23) Exp -> INPUT ( str ) .

    )               reduce using rule 23 (Exp -> INPUT ( str ) .)
    ,               reduce using rule 23 (Exp -> INPUT ( str ) .)
    PRINT           reduce using rule 23 (Exp -> INPUT ( str ) .)
    $end            reduce using rule 23 (Exp -> INPUT ( str ) .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 0 resolved as shift
WARNING: shift/reduce conflict for STR in state 0 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 2 resolved as shift
WARNING: shift/reduce conflict for id in state 2 resolved as shift
WARNING: shift/reduce conflict for INT in state 2 resolved as shift
WARNING: shift/reduce conflict for STR in state 2 resolved as shift
WARNING: reduce/reduce conflict in state 22 resolved using rule (PrintArgs -> Exp)
WARNING: rejected rule (PrintArg -> Exp) in state 22
