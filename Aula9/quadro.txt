Listas:
[]
[4]
[1,2,3]

Lista -> '[' ']'
       | '[' LCont ']'

LCont -> num
       | LCont ',' num 

-----------------------------

p1: Lista -> '[' Lista2   {'['}

p2: Lista2 -> ']'           {']'}
p3:         | LCont ']'     {num}

p4: LCont -> num LCont2     {num}

p5: LCont2 -> ',' num LCont2  {','}
p6:         |                  {']'}

estado    '['   ']'  num   ','
--------------------------------
Lista     p1 
Lista2           p2  p3
LCont                p4 
LCont2           p6         p5 

-------------------------------

Z -> S '$'          {'(','$', ')'}
S -> '(' S ')' S    {'('}
   |                {'$', ')'}

def rec_S():
    global prox_simb
    if prox_simb.type == 'PA':
        rec_term('PA')
        rec_S()
        rec_term('PF')
        rec_S()
    elif prox_simb.type == 'FIM' or prox_simb.type == 'PF':
        pass
    else:
        parseError(...)




